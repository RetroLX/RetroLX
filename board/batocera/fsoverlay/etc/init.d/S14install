#!/bin/bash

BOOTCONF="/boot/retrolx-boot.conf"

# only at start
test "$1" != "start" && exit 0

# true if triggers are not available or not set to do so
if ! grep -qE '^[ ]*install[ ]*=[ ]*true[ ]*$' "${BOOTCONF}"
then
    exit 0
fi

# UI Output with dialog, default colorset
function dialogoutput()
{
    local percent="$1"
    local text="Do not switch off your device, it will reboot once done !"

    dialog --backtitle "RetroLX" --title " Installing base packages " \
           --mixedgauge "$text" 18 50 "$percent" "${arr[@]}" &>/dev/tty1
}

# Executing parameters and watch background pid
# Changes text messages parsed to dialog --mixedgauge
function textoutput()
{
    local cmd="$3"
    local percent="$2"
    local pid ret
    $cmd >> /tmp/pacman.log 2>&1 &
    ret=$?
    pid=$!
    arr[$1]=7 #msg: In Progress
    dialogoutput "$percent"
    wait $pid
    arr[$1]=$ret #msg: Depends from return value
}

# only when install is wanted
if grep -qE '^[ ]*install[ ]*=[ ]*true[ ]*$' "${BOOTCONF}"
then

    # Preparing text arrays
    arr=(
	"Preparing install..................." "Pending"
	"Starting install...................." "Pending"
	"Installing base packages............" "Pending"
	"Installing base content............." "Pending"
	"Syncing filesystem.................." "Pending"
    )

    # --- BEGIN INSTALL ---
    for i in 1 3 5 7 9; do
	case $i in
	    1) textoutput $i 01 "sleep 0.1";;
	    3) textoutput $i 10 "sync";;
	    5) textoutput $i 30 "/usr/share/retrolx/scripts/install-packages.sh";;
	    7) textoutput $i 60 "/usr/share/retrolx/scripts/install-content.sh";;
	    9) textoutput $i 90 "sync";;
	esac
    done
    # --- END INSTALL ---

    # Remove the trigger
    mount -o remount,rw /boot && sed -i -e s+'^[ ]*install'+'#install'+ "${BOOTCONF}" && mount -o remount,ro /boot
fi

#Cleanup, restore screen, set progress of last item to 100%
dialogoutput 100
clear > /dev/tty1
sync
reboot
sleep infinity
exit 0
