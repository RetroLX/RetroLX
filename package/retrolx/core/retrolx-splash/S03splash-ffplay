#!/bin/bash

soundDisabled() {
    grep -qE "^[ ]*splash.screen.sound[ ]*=[ ]*0[ ]*$" /boot/retrolx-boot.conf
}

do_start ()
{
    if ls /boot/splash/*.mp4 >/dev/null 2>/dev/null
    then
        do_videostart "$(ls /boot/splash/*.mp4 | sed -e "$((RANDOM%$(ls -1 /boot/splash/*.mp4 | wc -l)+1))!d")"
    elif [[ $(ls /boot/splash/*.{jpg,png}  2>/dev/null) ]]
    then
        do_imagestart "$(ls /boot/splash/*.{jpg,png} | sed -e "$((RANDOM%$(ls -1 /boot/splash/*.{jpg,png} | wc -l)+1))!d")"
    else
        do_videostart "/usr/share/retrolx/splash/splash.mp4"
    fi
}

do_imagestart()
{
    image="$1"
    # on some sytems, fb0 is not immediatly loaded, so, keep a chance by waiting a bit
    N=0
    while ! test -e /dev/fb0 -o $N -gt 15
    do
        sleep 1
        let N++
    done
    test -e /dev/fb0 && fbv -f -i "${image}"
    sleep infinity
    wait $!
}

do_videostart ()
{
    video="$1"
    ffplay_opt=
    if soundDisabled
    then
        ffplay_opt=-an
    fi
    /usr/bin/ffplay $ffplay_opt -sync video -autoexit -vcodec h264_v4l2m2m -i "$video" &
    wait $! 
}

BOOTCONF="/boot/retrolx-boot.conf"
if grep -qE '^[ ]*autoresize[ ]*=[ ]*true[ ]*$' "${BOOTCONF}"
then
    exit 0
fi
if grep -qE '^[ ]*format-internal[ ]*=' "${BOOTCONF}"
then
    exit 0
fi
if grep -qE '^[ ]*install[ ]*=[ ]*true[ ]*$' "${BOOTCONF}"
then
    exit 0
fi

case "$1" in
    start)
        grep -qE '^[ ]*splash.screen.enabled[ ]*=[ ]*0[ ]*$' "/boot/retrolx-boot.conf" && exit 0
        do_start &
        ;;
    stop)
        ;;
    restart|reload)
        ;;
    *)
esac

exit $?
