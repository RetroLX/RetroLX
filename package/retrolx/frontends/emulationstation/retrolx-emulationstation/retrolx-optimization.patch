diff --git a/es-core/src/renderers/Renderer_GLES20.cpp b/es-core/src/renderers/Renderer_GLES20.cpp
index 4f9ca355..9e4b381c 100644
--- a/es-core/src/renderers/Renderer_GLES20.cpp
+++ b/es-core/src/renderers/Renderer_GLES20.cpp
@@ -189,10 +189,13 @@ namespace Renderer
 
 //////////////////////////////////////////////////////////////////////////
 
+static const int MAX_VERTICES=65535;
+
 	static void setupVertexBuffer()
 	{
 		GL_CHECK_ERROR(glGenBuffers(1, &vertexBuffer));
 		GL_CHECK_ERROR(glBindBuffer(GL_ARRAY_BUFFER, vertexBuffer));
+		GL_CHECK_ERROR(glBufferData(GL_ARRAY_BUFFER, sizeof(Vertex) * MAX_VERTICES, nullptr, GL_DYNAMIC_DRAW));
 
 	} // setupVertexBuffer
 
@@ -525,7 +528,7 @@ namespace Renderer
 	void drawLines(const Vertex* _vertices, const unsigned int _numVertices, const Blend::Factor _srcBlendFactor, const Blend::Factor _dstBlendFactor)
 	{
 		// Pass buffer data
-		GL_CHECK_ERROR(glBufferData(GL_ARRAY_BUFFER, sizeof(Vertex) * _numVertices, _vertices, GL_DYNAMIC_DRAW));
+		GL_CHECK_ERROR(glBufferSubData(GL_ARRAY_BUFFER, 0, sizeof(Vertex) * _numVertices, _vertices));
 
 		useProgram(&shaderProgramColorNoTexture);
 
@@ -543,7 +546,7 @@ namespace Renderer
 	void drawTriangleStrips(const Vertex* _vertices, const unsigned int _numVertices, const Blend::Factor _srcBlendFactor, const Blend::Factor _dstBlendFactor)
 	{
 		// Pass buffer data
-		GL_CHECK_ERROR(glBufferData(GL_ARRAY_BUFFER, sizeof(Vertex) * _numVertices, _vertices, GL_DYNAMIC_DRAW));		
+		GL_CHECK_ERROR(glBufferSubData(GL_ARRAY_BUFFER, 0, sizeof(Vertex) * _numVertices, _vertices));		
 
 		// Setup shader
 		if (boundTexture != 0)
@@ -637,7 +640,7 @@ namespace Renderer
 	void drawTriangleFan(const Vertex* _vertices, const unsigned int _numVertices, const Blend::Factor _srcBlendFactor, const Blend::Factor _dstBlendFactor)
 	{		
 		// Pass buffer data
-		GL_CHECK_ERROR(glBufferData(GL_ARRAY_BUFFER, sizeof(Vertex) * _numVertices, _vertices, GL_DYNAMIC_DRAW));
+		GL_CHECK_ERROR(glBufferSubData(GL_ARRAY_BUFFER, 0, sizeof(Vertex) * _numVertices, _vertices));
 
 		// Setup shader
 		if (boundTexture != 0)
@@ -664,7 +667,7 @@ namespace Renderer
 		glStencilMask(0xFF);
 		glClear(GL_STENCIL_BUFFER_BIT);
 		
-		glBufferData(GL_ARRAY_BUFFER, sizeof(Vertex) * _numVertices, _vertices, GL_DYNAMIC_DRAW);
+		glBufferSubData(GL_ARRAY_BUFFER, 0, sizeof(Vertex) * _numVertices, _vertices);
 		glDrawArrays(GL_TRIANGLE_FAN, 0, _numVertices);
 
 		glColorMask(GL_TRUE, GL_TRUE, GL_TRUE, GL_TRUE);
